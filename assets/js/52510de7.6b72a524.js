"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1204],{9752:(n,e,t)=>{t.d(e,{xA:()=>p,yg:()=>y});var a=t(6437);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function r(n,e){if(null==n)return{};var t,a,s=function(n,e){if(null==n)return{};var t,a,s={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var i=a.createContext({}),c=function(n){var e=a.useContext(i),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},p=function(n){var e=c(n.components);return a.createElement(i.Provider,{value:e},n.children)},m="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(n,e){var t=n.components,s=n.mdxType,l=n.originalType,i=n.parentName,p=r(n,["components","mdxType","originalType","parentName"]),m=c(t),d=s,y=m["".concat(i,".").concat(d)]||m[d]||u[d]||l;return t?a.createElement(y,o(o({ref:e},p),{},{components:t})):a.createElement(y,o({ref:e},p))}));function y(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var l=t.length,o=new Array(l);o[0]=d;var r={};for(var i in e)hasOwnProperty.call(e,i)&&(r[i]=e[i]);r.originalType=n,r[m]="string"==typeof n?n:s,o[1]=r;for(var c=2;c<l;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6761:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var a=t(2304),s=(t(6437),t(9752));const l={title:"\uc120\uc758 \uac70\ub9ac \uacc4\uc0b0\ud558\uae30",sidebar_position:16},o=void 0,r={unversionedId:"sample/overlay/calculatePolylineDistance",id:"sample/overlay/calculatePolylineDistance",title:"\uc120\uc758 \uac70\ub9ac \uacc4\uc0b0\ud558\uae30",description:"\uc9c0\ub3c4\ub97c \ub9c8\uc6b0\uc2a4\ub85c \ud074\ub9ad\ud558\uba74 \uc120 \uadf8\ub9ac\uae30\uac00 \uc2dc\uc791\ub418\uace0 \uc624\ub978\ucabd \ub9c8\uc6b0\uc2a4\ub97c \ud074\ub9ad\ud558\uba74 \uc120 \uadf8\ub9ac\uae30\uac00 \uc885\ub8cc\ub418\uba74\uc11c \uadf8\ub824\uc9c4 \uc120\uc758 \uc2e4\uc81c \uac70\ub9ac(\ub2e8\uc704 : m)\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.",source:"@site/docs/sample/overlay/calculatePolylineDistance.mdx",sourceDirName:"sample/overlay",slug:"/sample/overlay/calculatePolylineDistance",permalink:"/docs/sample/overlay/calculatePolylineDistance",draft:!1,editUrl:"https://github.com/JaeSeoKim/react-kakao-maps-sdk/edit/main/docs/sample/overlay/calculatePolylineDistance.mdx",tags:[],version:"current",sidebarPosition:16,frontMatter:{title:"\uc120\uc758 \uac70\ub9ac \uacc4\uc0b0\ud558\uae30",sidebar_position:16},sidebar:"tutorialSidebar",previous:{title:"\uc6d0, \ud0c0\uc6d0, \uc120, \uc0ac\uac01\ud615, \ub2e4\uac01\ud615 \ud45c\uc2dc\ud558\uae30",permalink:"/docs/sample/overlay/drawShape"},next:{title:"\ub2e4\uac01\ud615\uc758 \uba74\uc801 \uacc4\uc0b0\ud558\uae30",permalink:"/docs/sample/overlay/calculatePolygonArea"}},i={},c=[],p={toc:c},m="wrapper";function u(n){let{components:e,...t}=n;return(0,s.yg)(m,(0,a.A)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"\uc9c0\ub3c4\ub97c \ub9c8\uc6b0\uc2a4\ub85c \ud074\ub9ad\ud558\uba74 \uc120 \uadf8\ub9ac\uae30\uac00 \uc2dc\uc791\ub418\uace0 \uc624\ub978\ucabd \ub9c8\uc6b0\uc2a4\ub97c \ud074\ub9ad\ud558\uba74 \uc120 \uadf8\ub9ac\uae30\uac00 \uc885\ub8cc\ub418\uba74\uc11c \uadf8\ub824\uc9c4 \uc120\uc758 \uc2e4\uc81c \uac70\ub9ac(\ub2e8\uc704 : m)\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4."),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"\uc9c0\ub3c4\ub97c \ub9c8\uc6b0\uc2a4\ub85c \ud074\ub9ad\ud558\uba74 \uc120 \uadf8\ub9ac\uae30\uac00 \uc2dc\uc791\ub418\uace0")),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"\uc624\ub978\ucabd \ub9c8\uc6b0\uc2a4\ub97c \ud074\ub9ad\ud558\uba74 \uc120 \uadf8\ub9ac\uae30\uac00 \uc885\ub8cc\ub429\ub2c8\ub2e4")),(0,s.yg)("blockquote",null,(0,s.yg)("p",{parentName:"blockquote"},"original docs : ",(0,s.yg)("a",{parentName:"p",href:"https://apis.map.kakao.com/web/sample/calculatePolylineDistance/"},"https://apis.map.kakao.com/web/sample/calculatePolylineDistance/"))),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function(){\n  const [isdrawing, setIsdrawing] = useState(false)\n  const [clickLine, setClickLine] = useState()\n  const [paths, setPaths] = useState([])\n  const [distances, setDistances] = useState([])\n  const [mousePosition, setMousePosition] = useState({\n    lat: 0,\n    lng: 0,\n  })\n  const [moveLine, setMoveLine] = useState()\n\n  const handleClick = (\n    _map,\n    mouseEvent\n  ) => {\n    if (!isdrawing) {\n      setDistances([])\n      setPaths([])\n    }\n    setPaths((prev) => [\n      ...prev,\n      {\n        lat: mouseEvent.latLng.getLat(),\n        lng: mouseEvent.latLng.getLng(),\n      },\n    ])\n    setDistances((prev) => [\n      ...prev,\n      Math.round(clickLine.getLength() + moveLine.getLength()),\n    ])\n    setIsdrawing(true)\n  }\n\n  const handleMouseMove = (\n    _map,\n    mouseEvent\n  ) => {\n    setMousePosition({\n      lat: mouseEvent.latLng.getLat(),\n      lng: mouseEvent.latLng.getLng(),\n    })\n  }\n\n  const handleRightClick = (\n    _map,\n    _mouseEvent\n  ) => {\n    setIsdrawing(false)\n  }\n\n  const DistanceInfo = ({ distance }) => {\n    const walkkTime = (distance / 67) | 0\n    const bycicleTime = (distance / 227) | 0\n\n    return (\n      <ul className="dotOverlay distanceInfo">\n        <li>\n          <span className="label">\ucd1d\uac70\ub9ac</span>{" "}\n          <span className="number">{distance}</span>m\n        </li>\n        <li>\n          <span className="label">\ub3c4\ubcf4</span>{" "}\n          {walkkTime > 60 && (\n            <>\n              <span className="number">{Math.floor(walkkTime / 60)}</span> \uc2dc\uac04{" "}\n            </>\n          )}\n          <span className="number">{walkkTime % 60}</span> \ubd84\n        </li>\n        <li>\n          <span className="label">\uc790\uc804\uac70</span>{" "}\n          {bycicleTime > 60 && (\n            <>\n              <span className="number">{Math.floor(bycicleTime / 60)}</span>{" "}\n              \uc2dc\uac04{" "}\n            </>\n          )}\n          <span className="number">{bycicleTime % 60}</span> \ubd84\n        </li>\n      </ul>\n    )\n  }\n\n  return (\n    <>\n      <CalculatePolylineDistanceStyle />\n      <Map // \uc9c0\ub3c4\ub97c \ud45c\uc2dc\ud560 Container\n        id={`map`}\n        center={{\n          // \uc9c0\ub3c4\uc758 \uc911\uc2ec\uc88c\ud45c\n          lat: 37.498004414546934,\n          lng: 127.02770621963765,\n        }}\n        style={{\n          // \uc9c0\ub3c4\uc758 \ud06c\uae30\n          width: "100%",\n          height: "450px",\n        }}\n        level={3} // \uc9c0\ub3c4\uc758 \ud655\ub300 \ub808\ubca8\n        onClick={handleClick}\n        onRightClick={handleRightClick}\n        onMouseMove={handleMouseMove}\n      >\n        <Polyline\n          path={paths}\n          strokeWeight={3} // \uc120\uc758 \ub450\uaed8\uc785\ub2c8\ub2e4\n          strokeColor={"#db4040"} // \uc120\uc758 \uc0c9\uae54\uc785\ub2c8\ub2e4\n          strokeOpacity={1} // \uc120\uc758 \ubd88\ud22c\uba85\ub3c4\uc785\ub2c8\ub2e4 0\uc5d0\uc11c 1 \uc0ac\uc774\uac12\uc774\uba70 0\uc5d0 \uac00\uae4c\uc6b8\uc218\ub85d \ud22c\uba85\ud569\ub2c8\ub2e4\n          strokeStyle={"solid"} // \uc120\uc758 \uc2a4\ud0c0\uc77c\uc785\ub2c8\ub2e4\n          onCreate={setClickLine}\n        />\n        {paths.map((path) => (\n          <CustomOverlayMap\n            key={`dot-${path.lat},${path.lng}`}\n            position={path}\n            zIndex={1}\n          >\n            <span className="dot"></span>\n          </CustomOverlayMap>\n        ))}\n        {paths.length > 1 &&\n          distances.slice(1, distances.length).map((distance, index) => (\n            <CustomOverlayMap\n              key={`distance-${paths[index + 1].lat},${paths[index + 1].lng}`}\n              position={paths[index + 1]}\n              yAnchor={1}\n              zIndex={2}\n            >\n              {!isdrawing && distances.length === index + 2 ? (\n                <DistanceInfo distance={distance} />\n              ) : (\n                <div className="dotOverlay">\n                  \uac70\ub9ac <span className="number">{distance}</span>m\n                </div>\n              )}\n            </CustomOverlayMap>\n          ))}\n        <Polyline\n          path={isdrawing ? [paths[paths.length - 1], mousePosition] : []}\n          strokeWeight={3} // \uc120\uc758 \ub450\uaed8\uc785\ub2c8\ub2e4\n          strokeColor={"#db4040"} // \uc120\uc758 \uc0c9\uae54\uc785\ub2c8\ub2e4\n          strokeOpacity={0.5} // \uc120\uc758 \ubd88\ud22c\uba85\ub3c4\uc785\ub2c8\ub2e4 0\uc5d0\uc11c 1 \uc0ac\uc774\uac12\uc774\uba70 0\uc5d0 \uac00\uae4c\uc6b8\uc218\ub85d \ud22c\uba85\ud569\ub2c8\ub2e4\n          strokeStyle={"solid"} // \uc120\uc758 \uc2a4\ud0c0\uc77c\uc785\ub2c8\ub2e4\n          onCreate={setMoveLine}\n        />\n        {isdrawing && (\n          <CustomOverlayMap position={mousePosition} yAnchor={1} zIndex={2}>\n            <div className="dotOverlay distanceInfo">\n              \ucd1d\uac70\ub9ac{" "}\n              <span className="number">\n                {Math.round(clickLine.getLength() + moveLine.getLength())}\n              </span>\n              m\n            </div>\n          </CustomOverlayMap>\n        )}\n      </Map>\n    </>\n  )\n}\n')))}u.isMDXComponent=!0}}]);